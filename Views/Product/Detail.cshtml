@model CuaHangQuanAo.Models.ViewModels.ProductDetailVm
@{
    ViewData["Title"] = Model.Item.ItemsName;
    var backAction = (Model.Item.CategoryId >= 1 && Model.Item.CategoryId <= 7) ? "QuanAo" : "PhuKien";
}

<div class="container my-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item">
                <a asp-controller="Product" asp-action="@backAction">
                    @Model.Item.Category?.NameCategory
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Item.ItemsName</li>
        </ol>
    </nav>

    <div class="row g-4">
        <!-- LEFT: Gallery -->
        <div class="col-lg-7">
            <div class="card shadow-sm">
                <div class="ratio ratio-1x1 bg-light position-relative">
                    <img id="mainImage" src="~/Images/@Model.Item.Image" class="p-3 object-fit-contain" alt="@Model.Item.ItemsName" />
                </div>
            </div>

            <div class="row row-cols-4 g-3 mt-2">
                @for (int i = 0; i < Model.Gallery.Count; i++)
                {
                    <div class="col">
                        <div class="thumb border rounded-3 overflow-hidden position-relative" role="button" tabindex="0"
                             data-img="@Model.Gallery[i]">
                            <img src="~/Images/@Model.Gallery[i]" class="w-100 object-fit-contain" style="aspect-ratio:1/1" alt="thumb @i"
                                 onerror="this.src='/images/no-image.png'" />
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- RIGHT: Info -->
        <div class="col-lg-5">
            <div class="text-muted small">@Model.Item.Category?.NameCategory</div>
            <h2 class="mb-2">@Model.Item.ItemsName</h2>

            <div class="fs-3 fw-semibold text-danger mb-1" id="currentPrice">
                @string.Format("{0:N0} đ", Model.Item.SellPrice)
            </div>
            <div class="text-muted small mb-3">(Giá đã bao gồm VAT)</div>

            <!-- Stock Status -->
            <div class="mb-3">
                <span id="stockStatus" class="badge bg-success">Còn hàng</span>
                <span id="stockQuantity" class="text-muted small ms-2"></span>
            </div>

            <!-- Rating -->
            <div class="d-flex align-items-center gap-2 mb-3">
                <div class="rating">
                    <span class="text-warning">★</span><span class="text-warning">★</span>
                    <span class="text-warning">★</span><span class="text-warning">★</span>
                    <span class="text-secondary">★</span>
                </div>
                <div class="small">
                    @Model.Rating.ToString("0.0") (@Model.RatingCount) · <a href="#" class="link-dark">Viết đánh giá</a>
                </div>
            </div>

            <!-- Color Selection -->
            @if (Model.AvailableColors.Any())
            {
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="small text-muted mb-1">Màu sắc</div>
                        <div class="small" id="selectedColorName"></div>
                    </div>
                    <div class="d-flex gap-2 flex-wrap" id="colorGroup">
                        @foreach (var color in Model.AvailableColors)
                        {
                            <button type="button" class="btn btn-outline-secondary color-btn" data-color="@color">
                                @color
                            </button>
                        }
                    </div>
                </div>
            }

            <!-- Size Selection -->
            @if (Model.AvailableSizes.Any())
            {
                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="small text-muted">Kích thước</div>
                        <a href="#" class="small">Hướng dẫn chọn size</a>
                    </div>
                    <div class="d-flex flex-wrap gap-2 mt-2" id="sizeGroup">
                        @foreach (var size in Model.AvailableSizes)
                        {
                            <button type="button" class="btn btn-outline-secondary size-btn" data-size="@size">
                                @size
                            </button>
                        }
                    </div>
                </div>
            }

            <!-- Quantity Selection -->
            <div class="mb-3">
                <label class="form-label small text-muted">Số lượng</label>
                <div class="input-group" style="max-width: 150px;">
                    <button class="btn btn-outline-secondary" type="button" id="decreaseQty">-</button>
                    <input type="number" class="form-control text-center" id="quantity" value="1" min="1" max="1">
                    <button class="btn btn-outline-secondary" type="button" id="increaseQty">+</button>
                </div>
            </div>

            <!-- Add to cart -->
            <div class="d-grid gap-2">
                <button type="button" class="btn btn-dark btn-lg" id="btnAddCart" disabled>
                    <i class="bi bi-bag me-2"></i>CHỌN MÀU VÀ SIZE
                </button>

                <button class="btn btn-outline-dark">
                    <i class="bi bi-heart me-2"></i>Yêu thích
                </button>
            </div>

            <!-- Variant Information Display -->
            <div class="mt-3 p-3 bg-light rounded d-none" id="variantInfo">
                <div class="row">
                    <div class="col-6">
                        <small class="text-muted">Màu đã chọn:</small>
                        <div class="fw-semibold" id="selectedColorDisplay"></div>
                    </div>
                    <div class="col-6">
                        <small class="text-muted">Size đã chọn:</small>
                        <div class="fw-semibold" id="selectedSizeDisplay"></div>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-6">
                        <small class="text-muted">Giá:</small>
                        <div class="fw-semibold text-danger" id="variantPrice"></div>
                    </div>
                    <div class="col-6">
                        <small class="text-muted">Tồn kho:</small>
                        <div class="fw-semibold" id="variantStock"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Details Tabs -->
    <div class="row mt-5">
        <div class="col-12">
            <nav>
                <div class="nav nav-tabs" id="nav-tab" role="tablist">
                    <button class="nav-link active" id="nav-description-tab" data-bs-toggle="tab" data-bs-target="#nav-description" type="button" role="tab">
                        Mô tả sản phẩm
                    </button>
                    <button class="nav-link" id="nav-variants-tab" data-bs-toggle="tab" data-bs-target="#nav-variants" type="button" role="tab">
                        Các phiên bản (@Model.AvailableVariants.Count)
                    </button>
                    <button class="nav-link" id="nav-reviews-tab" data-bs-toggle="tab" data-bs-target="#nav-reviews" type="button" role="tab">
                        Đánh giá (@Model.RatingCount)
                    </button>
                </div>
            </nav>
            <div class="tab-content" id="nav-tabContent">
                <div class="tab-pane fade show active" id="nav-description" role="tabpanel">
                    <div class="p-4">
                        <p>Mô tả chi tiết về sản phẩm sẽ được hiển thị ở đây...</p>
                    </div>
                </div>
                <div class="tab-pane fade" id="nav-variants" role="tabpanel">
                    <div class="p-4">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Size</th>
                                        <th>Màu</th>
                                        <th>Giá</th>
                                        <th>Tồn kho</th>
                                        <th>Trạng thái</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var variant in Model.AvailableVariants)
                                    {
                                        <tr>
                                            <td><strong>@variant.Size</strong></td>
                                            <td>@variant.Color</td>
                                            <td class="fw-semibold">@string.Format("{0:N0} đ", variant.FinalPrice)</td>
                                            <td>@variant.AvailableInStorage</td>
                                            <td>
                                                @if (variant.IsInStock)
                                                {
                                                    <span class="badge bg-success">Còn hàng</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Hết hàng</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="tab-pane fade" id="nav-reviews" role="tabpanel">
                    <div class="p-4">
                        <p>Đánh giá từ khách hàng sẽ được hiển thị ở đây...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Products -->
    @if (Model.Related.Any())
    {
        <h4 class="mt-5 mb-3">Sản phẩm liên quan</h4>
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-3">
            @foreach (var item in Model.Related)
            {
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="ratio ratio-1x1 bg-light position-relative">
                            <img src="~/Images/@item.Image" class="p-3 object-fit-contain" alt="@item.ItemsName"
                                 onerror="this.src='/images/no-image.png'" />
                            <a asp-controller="Product" asp-action="Detail" asp-route-id="@item.ItemsId" class="stretched-link"></a>
                        </div>
                        <div class="card-body">
                            <div class="small text-muted">@item.Category?.NameCategory</div>
                            <h6 class="card-title text-truncate" title="@item.ItemsName">@item.ItemsName</h6>
                            <div class="fw-semibold">@string.Format("{0:N0} đ", item.SellPrice)</div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        let selectedSize = '';
        const productId = @Model.Item.ItemsId;
        const categoryId = @Model.Item.CategoryId;

        // Load available sizes on page load
        fetch(`/Product/GetAvailableSizes?categoryId=${categoryId}`)
            .then(res => res.json())
            .then(sizes => {
                const sizeGroup = document.getElementById('sizeGroup');
                sizeGroup.innerHTML = '';

                sizes.forEach(size => {
                    const btn = document.createElement('button');
                    btn.type = 'button';
                    btn.className = 'btn btn-outline-secondary size-btn';
                    btn.setAttribute('data-size', size);
                    btn.textContent = size;
                    sizeGroup.appendChild(btn);
                });

                // Add click handlers to size buttons
                const sizeBtns = document.querySelectorAll('.size-btn');
                sizeBtns.forEach(btn => {
                    btn.addEventListener('click', () => {
                        sizeBtns.forEach(b => b.classList.remove('active'));
                        btn.classList.add('active');
                        selectedSize = btn.getAttribute('data-size');
                    });
                });
            });

        // Load available colors
        fetch(`/Product/GetAvailableColors?categoryId=${categoryId}`)
            .then(res => res.json())
            .then(colors => {
                console.log('Available colors:', colors);
                // You can populate color swatches here if needed
            });

        document.getElementById('btnAddCart').addEventListener('click', function () {
            if (!selectedSize) {
                alert('Vui lòng chọn size!');
                return;
            }

            fetch('@Url.Action("Add", "Cart")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: `id=${productId}&size=${encodeURIComponent(selectedSize)}&quantity=1`
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    alert(data.message + " (Tổng số sản phẩm: " + data.cartCount + ")");
                } else {
                    alert("Lỗi: " + data.message);
                }
            });
        });

        // Gallery image switching
        document.querySelectorAll('.thumb').forEach(thumb => {
            thumb.addEventListener('click', function() {
                const imgSrc = this.getAttribute('data-img');
                document.getElementById('mainImage').src = '/Images/' + imgSrc;
            });
        });
    </script>
}
