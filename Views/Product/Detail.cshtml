@model CuaHangQuanAo.Models.ViewModels.ProductDetailVm
@{
    ViewData["Title"] = Model.Item.ItemsName;
    Layout = "_Layout";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">

<style>
    /* Import Google Fonts */
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
    
    * {
        font-family: 'Inter', sans-serif;
    }
    
    .product-detail-container {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }
    
    .product-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.1);
        overflow: hidden;
        border: 1px solid rgba(255,255,255,0.2);
        animation: slideInUp 0.8s ease-out;
    }
    
    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .product-image-section {
        padding: 2rem;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        position: relative;
        overflow: hidden;
    }
    
    .product-image-section::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(102, 126, 234, 0.05) 0%, transparent 70%);
        animation: rotate 20s linear infinite;
    }
    
    @@keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    
    .product-image-container {
        position: relative;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 15px 40px rgba(0,0,0,0.15);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        background: #f8f9fa;
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 500px;
    }
    
    .product-image-container:hover {
        transform: translateY(-5px);
        box-shadow: 0 25px 50px rgba(0,0,0,0.2);
    }
    
    .product-image-container.loading {
        opacity: 0.7;
    }
    
    .product-image-container img {
        width: 100%;
        height: 500px;
        object-fit: contain;
        object-position: center;
        transition: all 0.4s ease;
        background: #f8f9fa;
    }
    
    .image-loading {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 10;
    }
    
    .spinner-border {
        width: 3rem;
        height: 3rem;
        border-width: 0.3em;
    }
    
    .product-info-section {
        padding: 2.5rem;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        position: relative;
    }
    
    .product-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: #2c3e50;
        margin-bottom: 1rem;
        line-height: 1.2;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .product-price {
        font-size: 2rem;
        font-weight: 800;
        color: #28a745;
        margin-bottom: 1.5rem;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .stock-info {
        font-size: 1.1rem;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        border-radius: 25px;
        margin-bottom: 2rem;
        display: inline-block;
        transition: all 0.3s ease;
    }
    
    .stock-info.in-stock {
        background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
        color: #155724;
        border: 2px solid #c3e6cb;
    }
    
    .stock-info.out-of-stock {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        color: #721c24;
        border: 2px solid #f5c6cb;
    }
    
    .variant-section {
        margin-bottom: 2rem;
    }
    
    .variant-label {
        font-size: 1.1rem;
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    
    .variant-label i {
        color: #667eea;
        font-size: 1.2rem;
    }
    
    .form-select, .form-control {
        border: 2px solid #e9ecef;
        border-radius: 15px;
        padding: 0.875rem 1.25rem;
        font-size: 1rem;
        font-weight: 500;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        background: rgba(255,255,255,0.9);
    }
    
    .form-select:focus, .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        outline: none;
        background: white;
    }
    
    .form-select:hover, .form-control:hover {
        border-color: #667eea;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .add-to-cart-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        border-radius: 25px;
        padding: 1rem 2.5rem;
        font-size: 1.2rem;
        font-weight: 600;
        color: white;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 8px 30px rgba(102, 126, 234, 0.3);
        width: 100%;
        margin-top: 1rem;
    }
    
    .add-to-cart-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }
    
    .add-to-cart-btn:hover::before {
        left: 100%;
    }
    
    .add-to-cart-btn:hover {
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        transform: translateY(-3px);
        box-shadow: 0 15px 40px rgba(102, 126, 234, 0.4);
    }
    
    .add-to-cart-btn:disabled {
        background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
        cursor: not-allowed;
        transform: none;
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
    }
    
    .add-to-cart-btn:disabled:hover {
        transform: none;
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
    }
    
    .login-required {
        background: linear-gradient(135deg, #ffc107 0%, #ff8c00 100%);
        color: #000;
        padding: 1rem 1.5rem;
        border-radius: 15px;
        font-weight: 600;
        text-align: center;
        margin-top: 1rem;
        box-shadow: 0 5px 15px rgba(255, 193, 7, 0.3);
    }
    
    .quantity-control {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1.5rem;
    }
    
    .quantity-btn {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        border: 2px solid #e9ecef;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        color: #6c757d;
        font-weight: 600;
        font-size: 1.2rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        cursor: pointer;
    }
    
    .quantity-btn:hover {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-color: #667eea;
        transform: scale(1.1);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }
    
    .quantity-input {
        width: 80px;
        text-align: center;
        border: 2px solid #e9ecef;
        border-radius: 15px;
        padding: 0.875rem;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        background: rgba(255,255,255,0.9);
    }
    
    .quantity-input:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        outline: none;
    }
    
    .product-features {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 20px;
        padding: 1.5rem;
        margin-top: 2rem;
    }
    
    .feature-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        margin-bottom: 1rem;
        font-weight: 500;
        color: #495057;
    }
    
    .feature-item:last-child {
        margin-bottom: 0;
    }
    
    .feature-item i {
        color: #28a745;
        font-size: 1.2rem;
    }
    
    @@media (max-width: 768px) {
        .product-detail-container {
            padding: 1rem 0;
        }
        
        .product-image-section,
        .product-info-section {
            padding: 1.5rem;
        }
        
        .product-title {
            font-size: 2rem;
        }
        
        .product-price {
            font-size: 1.5rem;
        }
        
        .product-image-container img {
            height: 400px;
        }
        
        .add-to-cart-btn {
            padding: 0.875rem 2rem;
            font-size: 1.1rem;
        }
    }
    
    @@media (max-width: 576px) {
        .product-image-section,
        .product-info-section {
            padding: 1rem;
        }
        
        .product-title {
            font-size: 1.75rem;
        }
        
        .product-price {
            font-size: 1.25rem;
        }
        
        .product-image-container img {
            height: 350px;
        }
        
        .quantity-control {
            justify-content: center;
        }
    }
</style>

<div class="product-detail-container">
    <div class="container">
        <div class="product-card">
            <div class="row g-0">
                <!-- Product Image Section -->
                <div class="col-lg-6">
                    <div class="product-image-section">
                        <div class="product-image-container" id="imageContainer">
                            <img id="mainImage"
                                 src="~/Images/products/@(Model.MainImage ?? "no-img.png")"
                                 alt="@Model.Item.ItemsName"
                                 class="img-fluid">
                            <div id="imageLoading" class="image-loading d-none">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Loading...</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Product Info Section -->
                <div class="col-lg-6">
                    <div class="product-info-section">
                        <h1 class="product-title">@Model.Item.ItemsName</h1>
                        
                        <div class="product-price" id="priceInfo">
                            @String.Format("{0:N0}", Model.Item.SellPrice) ₫
                        </div>
                        
                        <div id="stockInfo" class="stock-info"></div>

                        <div class="variant-section">
                            <div class="variant-label">
                                <i class="bi bi-palette"></i>
                                Màu sắc
                            </div>
                            <select id="colorSelect" class="form-select">
                                <option value="">-- Chọn màu --</option>
                            </select>
                        </div>

                        <div class="variant-section">
                            <div class="variant-label">
                                <i class="bi bi-rulers"></i>
                                Kích thước
                            </div>
                            <select id="sizeSelect" class="form-select">
                                <option value="">-- Chọn size --</option>
                            </select>
                        </div>

                        <div class="variant-section">
                            <div class="variant-label">
                                <i class="bi bi-123"></i>
                                Số lượng
                            </div>
                            <div class="quantity-control">
                                <button type="button" class="quantity-btn" id="decreaseQty">
                                    <i class="bi bi-dash"></i>
                                </button>
                                <input type="number" id="quantity" class="quantity-input" value="1" min="1">
                                <button type="button" class="quantity-btn" id="increaseQty">
                                    <i class="bi bi-plus"></i>
                                </button>
                            </div>
                        </div>

                        @Html.AntiForgeryToken()

                        <button id="addToCartBtn" class="add-to-cart-btn" @(User.Identity.IsAuthenticated ? "" : "disabled")>
                            <i class="bi bi-cart-plus me-2"></i>Thêm vào giỏ hàng
                        </button>
                        
                        @if (!User.Identity.IsAuthenticated)
                        {
                            <div class="login-required">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                Bạn cần đăng nhập để thêm vào giỏ hàng
                            </div>
                        }

                        <div class="product-features">
                            <div class="feature-item">
                                <i class="bi bi-shield-check"></i>
                                <span>Bảo hành chính hãng 12 tháng</span>
                            </div>
                            <div class="feature-item">
                                <i class="bi bi-truck"></i>
                                <span>Miễn phí vận chuyển toàn quốc</span>
                            </div>
                            <div class="feature-item">
                                <i class="bi bi-arrow-clockwise"></i>
                                <span>Đổi trả trong 30 ngày</span>
                            </div>
                            <div class="feature-item">
                                <i class="bi bi-headset"></i>
                                <span>Hỗ trợ khách hàng 24/7</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="variantsData" value='@Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.AvailableVariants))' />

@section Scripts {
    <script>
        $(document).ready(function () {
            let productId = @Model.Item.ItemsId;
            let variants = [];
            try {
                variants = JSON.parse($("#variantsData").val());
            } catch { variants = []; }

            // Quantity controls
            $("#increaseQty").click(function() {
                let currentQty = parseInt($("#quantity").val());
                $("#quantity").val(currentQty + 1);
            });

            $("#decreaseQty").click(function() {
                let currentQty = parseInt($("#quantity").val());
                if (currentQty > 1) {
                    $("#quantity").val(currentQty - 1);
                }
            });

            // Populate color and size dropdowns with all available options
            function populateDropdowns() {
                const colors = [...new Set(variants.map(v => v.Color))];
                const sizes = [...new Set(variants.map(v => v.Size))];

                let colorSelect = $("#colorSelect");
                let sizeSelect = $("#sizeSelect");
                colorSelect.empty().append('<option value="">-- Chọn màu --</option>');
                sizeSelect.empty().append('<option value="">-- Chọn size --</option>');
                colors.forEach(c => colorSelect.append(`<option value="${c}">${c}</option>`));
                sizes.forEach(s => sizeSelect.append(`<option value="${s}">${s}</option>`));
            }

            populateDropdowns();

            // Auto-select first available color and size if available
            if (variants.length > 0) {
                const firstColor = [...new Set(variants.map(v => v.Color))][0];
                const firstSize = [...new Set(variants.filter(v => v.Color === firstColor).map(v => v.Size))][0];
                
                if (firstColor) {
                    $("#colorSelect").val(firstColor);
                    updateImageByColor(firstColor);
                }
                if (firstSize) $("#sizeSelect").val(firstSize);
                
                updateVariantPreview();
            }

            // When color changes, filter sizes and update image
            $("#colorSelect").change(function () {
                const selectedColor = $(this).val();
                const sizeSelect = $("#sizeSelect");
                const prevSize = sizeSelect.val();

                const availableSizes = [...new Set(variants.filter(v => v.Color === selectedColor).map(v => v.Size))];
                sizeSelect.find("option").each(function () {
                    if (!$(this).val() || availableSizes.includes($(this).val())) {
                        $(this).prop("disabled", false);
                    } else {
                        $(this).prop("disabled", true);
                    }
                });

                if (prevSize && !availableSizes.includes(prevSize)) {
                    sizeSelect.val("");
                }

                updateImageByColor(selectedColor);
                updateVariantPreview();
            });

            // When size changes, filter colors (but don't update image)
            $("#sizeSelect").change(function () {
                const selectedSize = $(this).val();
                const colorSelect = $("#colorSelect");
                const prevColor = colorSelect.val();

                const availableColors = [...new Set(variants.filter(v => v.Size === selectedSize).map(v => v.Color))];
                colorSelect.find("option").each(function () {
                    if (!$(this).val() || availableColors.includes($(this).val())) {
                        $(this).prop("disabled", false);
                    } else {
                        $(this).prop("disabled", true);
                    }
                });

                if (prevColor && !availableColors.includes(prevColor)) {
                    colorSelect.val("");
                }

                updateVariantPreview();
            });

            // Update image based on color only
            function updateImageByColor(selectedColor) {
                if (!selectedColor) {
                    $("#mainImage").attr("src", "/Images/products/@(Model.MainImage ?? "no-img.png")");
                    return;
                }

                let colorVariant = variants.find(v => v.Color === selectedColor);
                if (colorVariant && colorVariant.Image) {
                    let imageFile = colorVariant.Image.trim();
                    let newImageSrc = "/Images/products/" + imageFile;
                    
                    $("#imageLoading").removeClass("d-none");
                    $("#imageContainer").addClass("loading");
                    
                    let img = new Image();
                    img.onload = function() {
                        $("#mainImage").attr("src", newImageSrc);
                        $("#imageLoading").addClass("d-none");
                        $("#imageContainer").removeClass("loading");
                    };
                    img.onerror = function() {
                        $("#mainImage").attr("src", "/Images/products/no-img.png");
                        $("#imageLoading").addClass("d-none");
                        $("#imageContainer").removeClass("loading");
                    };
                    img.src = newImageSrc;
                } else {
                    $("#mainImage").attr("src", "/Images/products/@(Model.MainImage ?? "no-img.png")");
                }
            }

            // Update preview (stock, price) - without image update
            function updateVariantPreview() {
                let color = $("#colorSelect").val();
                let size = $("#sizeSelect").val();
                
                if (!color || !size) {
                    $("#priceInfo").text(Number(@Model.Item.SellPrice).toLocaleString("vi-VN") + " ₫");
                    $("#stockInfo").text("").removeClass("in-stock out-of-stock");
                    return;
                }

                let variant = variants.find(v => v.Color === color && v.Size === size);
                if (variant) {
                    let stockText = variant.AvailableInStorage > 0 ? `Còn ${variant.AvailableInStorage} sản phẩm` : "Hết hàng";
                    $("#stockInfo").text(stockText).removeClass("in-stock out-of-stock").addClass(variant.AvailableInStorage > 0 ? "in-stock" : "out-of-stock");
                    
                    let price = Number(variant.FinalPrice);
                    if (isNaN(price) || price <= 0) {
                        price = Number(@Model.Item.SellPrice) || 0;
                    }
                    $("#priceInfo").text(price.toLocaleString("vi-VN") + " ₫");
                    
                    if (variant.AvailableInStorage > 0) {
                        $("#addToCartBtn").prop("disabled", false);
                    } else {
                        $("#addToCartBtn").prop("disabled", true);
                    }
                } else {
                    $("#stockInfo").text("Không khả dụng").removeClass("in-stock out-of-stock");
                    $("#priceInfo").text(Number(@Model.Item.SellPrice).toLocaleString("vi-VN") + " ₫");
                    $("#addToCartBtn").prop("disabled", true);
                }
            }

            // Add to cart logic
            $("#addToCartBtn").click(function () {
                if ($(this).prop("disabled")) {
                    alert("Bạn cần đăng nhập để thêm vào giỏ hàng.");
                    return;
                }

                let color = $("#colorSelect").val();
                let size = $("#sizeSelect").val();
                let qty = $("#quantity").val();

                if (!color || !size) {
                    alert("Vui lòng chọn màu và size trước khi thêm vào giỏ hàng.");
                    return;
                }

                let variant = variants.find(v => v.Color === color && v.Size === size);
                if (!variant) {
                    alert("Không tìm thấy biến thể phù hợp.");
                    return;
                }

                $.ajax({
                    url: '/Cart/AddToCart',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ variantId: variant.VariantId, quantity: qty }),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (cartRes) {
                        if (cartRes.success) {
                            alert(cartRes.message);
                            if (typeof updateCartCount === 'function') {
                                updateCartCount(cartRes.cartCount);
                            } else {
                                $("#cartCount").text(cartRes.cartCount);
                            }
                        } else {
                            alert(cartRes.message);
                        }
                    },
                    error: function () {
                        alert("Không thể thêm vào giỏ hàng.");
                    }
                });
            });
        });
    </script>
}