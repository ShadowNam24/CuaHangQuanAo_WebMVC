@model CuaHangQuanAo.Models.ChangePasswordVM
@{
    ViewData["Title"] = "Đổi mật khẩu";
    Layout = "_AuthenLayout";
}

<style>
    .auth-wrap {
        min-height: calc(100vh - 140px);
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem 1rem;
        background: linear-gradient(135deg,#f7f7f7 0%,#ffffff 40%,#f1f5f9 100%);
    }

    .auth-card {
        width: 100%;
        max-width: 760px;
        border: 0;
        border-radius: 24px;
        overflow: hidden;
        box-shadow: 0 20px 60px rgba(0,0,0,.12);
    }

    .card-header {
        background: #111827;
        color: #fff;
    }

    .input-group-text {
        background: #fff;
        border-color: #e5e7eb;
    }

    .form-control {
        border-color: #e5e7eb;
    }

        .form-control:focus {
            box-shadow: 0 0 0 .25rem rgba(230,126,34,.15);
            border-color: #e67e22;
        }

    .btn-primary {
        background: #111827;
        border-color: #111827;
        border-radius: 12px;
        padding: .85rem 1rem;
        font-weight: 700;
        letter-spacing: .3px;
    }

        .btn-primary:hover {
            background: #e67e22;
            border-color: #e67e22;
        }

    .strength {
        height: 8px;
        border-radius: 6px;
        background: #e5e7eb;
        overflow: hidden;
    }

        .strength > span {
            display: block;
            height: 100%;
            width: 0;
            background: #ef4444;
            transition: width .25s ease, background .25s ease;
        }

        .strength.good > span {
            background: #f59e0b;
        }

        .strength.strong > span {
            background: #10b981;
        }

    .help {
        color: #6b7280;
        font-size: .9rem;
    }
</style>

<div class="auth-wrap">
    <div class="card auth-card">
        <div class="card-header">
            <h5 class="mb-0"><i class="bi bi-shield-lock me-2"></i>Đổi mật khẩu</h5>
        </div>

        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <form asp-action="ChangePassword" method="post" novalidate>
                @Html.AntiForgeryToken()
                <div asp-validation-summary="ModelOnly" class="text-danger mb-2"></div>
                <input type="hidden" asp-for="Token" />

                <div class="mb-3">
                    <label asp-for="Email" class="form-label">Email</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                        <input asp-for="Email" class="form-control" readonly />
                    </div>
                </div>

                <div class="mb-2">
                    <label asp-for="NewPassword" class="form-label">Mật khẩu mới</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-key"></i></span>
                        <input asp-for="NewPassword" class="form-control" type="password" id="NewPassword" />
                        <button type="button" class="btn btn-outline" id="toggleNewPassword" title="Hiện/ẩn mật khẩu">
                            <i class="bi bi-eye" id="NewPasswordIcon"></i>
                        </button>
                    </div>
                    <div class="strength mt-2" id="pwMeter"><span></span></div>
                    <div class="help mt-1">Tối thiểu 8 ký tự, nên có chữ hoa, số và ký tự đặc biệt.</div>
                    <span asp-validation-for="NewPassword" class="text-danger small"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="ConfirmPassword" class="form-label">Xác nhận mật khẩu</label>
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-shield-check"></i></span>
                        <input asp-for="ConfirmPassword" class="form-control" type="password" id="ConfirmPassword" />
                        <button type="button" class="btn btn-outline" id="toggleConfirmPassword" title="Hiện/ẩn mật khẩu">
                            <i class="bi bi-eye" id="ConfirmPasswordIcon"></i>
                        </button>
                    </div>
                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-check2-circle me-1"></i> Đổi mật khẩu
                    </button>
                </div>
            </form>
        </div>

        <div class="card-footer text-center d-flex justify-content-center gap-3">
            <a asp-action="Login" class="btn btn-outline-dark">
                <i class="bi bi-box-arrow-in-right me-1"></i> Đăng nhập lại
            </a>
            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-house-door me-1"></i> Về trang chủ
            </a>
        </div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Toggle show/hide password
        function bindToggle(btnId, inputId, iconId) {
            const btn = document.getElementById(btnId),
                  input = document.getElementById(inputId),
                  icon = document.getElementById(iconId);
            btn?.addEventListener('click', () => {
                if (input.type === "password") { input.type = "text"; icon.classList.replace("bi-eye","bi-eye-slash"); }
                else { input.type = "password"; icon.classList.replace("bi-eye-slash","bi-eye"); }
            });
        }
        bindToggle('toggleNewPassword','NewPassword','NewPasswordIcon');
        bindToggle('toggleConfirmPassword','ConfirmPassword','ConfirmPasswordIcon');

        // Simple password strength meter
        (function () {
            const input = document.getElementById('NewPassword');
            const meter = document.getElementById('pwMeter');
            const bar = meter.querySelector('span');

            function score(pw){
                let s = 0;
                if (!pw) return 0;
                if (pw.length >= 8) s++;
                if (/[A-Z]/.test(pw)) s++;
                if (/[a-z]/.test(pw)) s++;
                if (/\d/.test(pw)) s++;
                if (/[^A-Za-z0-9]/.test(pw)) s++;
                return Math.min(s, 5);
            }
            input?.addEventListener('input', () => {
                const sc = score(input.value);
                const pct = (sc/5)*100;
                bar.style.width = pct + '%';
                meter.classList.remove('good','strong');
                if (sc >= 4) meter.classList.add('strong');
                else if (sc >= 3) meter.classList.add('good');
            });
        })();
    </script>
}
