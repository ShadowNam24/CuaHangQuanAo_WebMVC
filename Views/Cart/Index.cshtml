@model List<CuaHangQuanAo.Models.CartItem>

<style>
    /* Import Google Fonts */
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');
    
    * {
        font-family: 'Inter', sans-serif;
    }
    
    .cart-container {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
        position: relative;
        overflow: hidden;
    }
    
    .cart-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="50" cy="10" r="0.5" fill="rgba(255,255,255,0.05)"/><circle cx="10" cy="60" r="0.5" fill="rgba(255,255,255,0.05)"/><circle cx="90" cy="40" r="0.5" fill="rgba(255,255,255,0.05)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
        pointer-events: none;
    }
    
    .cart-header {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        padding: 3rem 0;
        margin-bottom: 3rem;
        border-radius: 0 0 30px 30px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 40px rgba(0,0,0,0.2);
    }
    
    .cart-header::before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        animation: float 6s ease-in-out infinite;
    }
    
    @@keyframes float {
        0%, 100% { transform: translateY(0px) rotate(0deg); }
        50% { transform: translateY(-20px) rotate(180deg); }
    }
    
    .cart-header h1 {
        position: relative;
        z-index: 2;
        text-shadow: 0 4px 8px rgba(0,0,0,0.3);
        animation: slideInDown 0.8s ease-out;
    }
    
    @@keyframes slideInDown {
        from {
            opacity: 0;
            transform: translateY(-30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .cart-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.15);
        overflow: hidden;
        margin-bottom: 2rem;
        border: 1px solid rgba(255,255,255,0.2);
        animation: slideInUp 0.8s ease-out;
    }
    
    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    .product-item {
        border-bottom: 1px solid rgba(0,0,0,0.05);
        padding: 2rem;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
    }
    
    .product-item::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
        transition: left 0.5s;
    }
    
    .product-item:hover::before {
        left: 100%;
    }
    
    .product-item:hover {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(118, 75, 162, 0.05) 100%);
        transform: translateY(-5px);
        box-shadow: 0 15px 35px rgba(0,0,0,0.1);
    }
    
    .product-item:last-child {
        border-bottom: none;
    }
    
    .product-image {
        width: 140px;
        height: 140px;
        object-fit: cover;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.15);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        border: 3px solid rgba(255,255,255,0.8);
    }
    
    .product-image:hover {
        transform: scale(1.08) rotate(2deg);
        box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    }
    
    .quantity-controls {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        justify-content: center;
    }
    
    .quantity-btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        border: 2px solid #e9ecef;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        color: #6c757d;
        font-weight: 600;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }
    
    .quantity-btn:hover {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-color: #667eea;
        transform: scale(1.15);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }
    
    .quantity-input {
        width: 70px;
        text-align: center;
        border: 2px solid #e9ecef;
        border-radius: 15px;
        padding: 0.75rem;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s ease;
        background: rgba(255,255,255,0.9);
    }
    
    .quantity-input:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        outline: none;
    }
    
    .remove-btn {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
        border: none;
        border-radius: 30px;
        padding: 0.75rem 1.5rem;
        color: white;
        font-weight: 600;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 6px 20px rgba(255, 107, 107, 0.3);
    }
    
    .remove-btn:hover {
        background: linear-gradient(135deg, #ee5a52 0%, #dc3545 100%);
        transform: translateY(-3px);
        box-shadow: 0 10px 30px rgba(255, 107, 107, 0.4);
    }
    
    .summary-card {
        background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);
        color: white;
        border-radius: 25px;
        padding: 2.5rem;
        box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        position: relative;
        overflow: hidden;
        animation: slideInRight 0.8s ease-out;
    }
    
    @@keyframes slideInRight {
        from {
            opacity: 0;
            transform: translateX(30px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }
    
    .summary-card::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        animation: rotate 20s linear infinite;
    }
    
    @@keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }
    
    .action-btn {
        border-radius: 30px;
        padding: 1rem 2rem;
        font-weight: 600;
        font-size: 1.1rem;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        border: none;
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }
    
    .action-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
        transition: left 0.5s;
    }
    
    .action-btn:hover::before {
        left: 100%;
    }
    
    .checkout-btn {
        background: linear-gradient(135deg, #56ab2f 0%, #a8e6cf 100%);
        color: white;
        box-shadow: 0 8px 30px rgba(86, 171, 47, 0.3);
    }
    
    .checkout-btn:hover {
        background: linear-gradient(135deg, #4a9a2a 0%, #8dd3a7 100%);
        transform: translateY(-4px);
        box-shadow: 0 15px 40px rgba(86, 171, 47, 0.4);
    }
    
    .clear-btn {
        background: linear-gradient(135deg, #ffa726 0%, #ffcc02 100%);
        color: #000;
        box-shadow: 0 8px 30px rgba(255, 167, 38, 0.3);
    }
    
    .clear-btn:hover {
        background: linear-gradient(135deg, #ff9800 0%, #ffc107 100%);
        transform: translateY(-4px);
        box-shadow: 0 15px 40px rgba(255, 167, 38, 0.4);
    }
    
    .empty-cart {
        text-align: center;
        padding: 5rem 2rem;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(20px);
        border-radius: 25px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.15);
        animation: fadeIn 1s ease-out;
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; transform: scale(0.9); }
        to { opacity: 1; transform: scale(1); }
    }
    
    .empty-cart img {
        width: 250px;
        height: 250px;
        object-fit: contain;
        margin-bottom: 2rem;
        opacity: 0.8;
        animation: bounce 2s infinite;
    }
    
    @@keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
    }
    
    .shopping-btn {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 30px;
        padding: 1.25rem 2.5rem;
        font-size: 1.2rem;
        font-weight: 600;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        text-transform: uppercase;
        letter-spacing: 1px;
        box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
    }
    
    .shopping-btn:hover {
        background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);
        transform: translateY(-4px);
        box-shadow: 0 15px 40px rgba(102, 126, 234, 0.4);
    }
    
    .price-highlight {
        font-size: 1.3rem;
        font-weight: 700;
        color: #28a745;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .total-price {
        font-size: 1.8rem;
        font-weight: 800;
        color: #ffffff;
        text-shadow: 0 4px 8px rgba(0,0,0,0.3);
    }
    
    .product-name {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }
    
    .product-attributes {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
    }
    
    .attribute-badge {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 500;
    }
    
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }
    
    .loading-overlay.show {
        opacity: 1;
        visibility: visible;
    }
    
    .loading-spinner {
        width: 60px;
        height: 60px;
        border: 4px solid rgba(255,255,255,0.3);
        border-top: 4px solid #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }
    
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    @@media (max-width: 768px) {
        .cart-container {
            padding: 1rem 0;
        }
        
        .cart-header {
            padding: 2rem 0;
            margin-bottom: 2rem;
        }
        
        .product-item {
            padding: 1.5rem;
        }
        
        .product-image {
            width: 100px;
            height: 100px;
        }
        
        .quantity-controls {
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .summary-card {
            padding: 2rem;
        }
    }
    
    @@media (max-width: 576px) {
        .product-item {
            padding: 1rem;
        }
        
        .product-image {
            width: 80px;
            height: 80px;
        }
        
        .product-name {
            font-size: 1rem;
        }
        
        .attribute-badge {
            font-size: 0.75rem;
            padding: 0.2rem 0.5rem;
        }
    }
</style>

<div class="cart-container">
    <div class="container">
        <!-- Cart Header -->
        <div class="cart-header text-center">
            <h1 class="display-4 fw-bold mb-3">
                <i class="bi bi-cart-fill me-3"></i>Giỏ hàng của bạn
            </h1>
            <p class="lead mb-0">Quản lý và thanh toán đơn hàng</p>
        </div>

        @if (!Model.Any())
        {
            <!-- Empty Cart -->
            <div class="empty-cart">
                <img src="~/Images/demo/empty.png" alt="Empty Cart" />
                <h3 class="text-muted mb-3">Giỏ hàng của bạn đang trống</h3>
                <p class="text-muted mb-4">Hãy khám phá các sản phẩm tuyệt vời của chúng tôi</p>
                <a href="/" class="shopping-btn">
                    <i class="bi bi-bag-plus me-2"></i>Bắt đầu mua sắm
                </a>
            </div>
        }
        else
        {
            <div class="row">
                <!-- Cart Items -->
                <div class="col-lg-8">
                    <div class="cart-card">
                        <div class="card-header bg-white border-0 p-4">
                            <h4 class="mb-0">
                                <i class="bi bi-list-ul me-2 text-primary"></i>
                                Sản phẩm trong giỏ hàng (@Model.Count)
                            </h4>
                        </div>
                        <div class="card-body p-0">
                            @foreach (var item in Model)
                            {
                                var imgSrc = !string.IsNullOrEmpty(item.Image)
                                    ? Url.Content("~/Images/products/" + item.Image)
                                    : Url.Content("~/Images/no-image.png");
                                    
                                <div class="product-item">
                                    <div class="row align-items-center">
                                        <!-- Product Image -->
                                        <div class="col-md-2 d-flex align-items-center justify-content-center">
                                            <img src="@imgSrc" class="product-image" alt="@item.ItemsName"
                                                 onerror="this.onerror=null;this.src='@Url.Content("~/Images/no-image.png")'" />
                                        </div>
                                        
                                        <!-- Product Info -->
                                        <div class="col-md-4 d-flex flex-column justify-content-center">
                                            <h5 class="product-name mb-2">@item.ItemsName</h5>
                                            <div class="product-attributes">
                                                <span class="attribute-badge">
                                                    <i class="bi bi-tag me-1"></i>Size: @item.Size
                                                </span>
                                                <span class="attribute-badge">
                                                    <i class="bi bi-palette me-1"></i>Màu: @item.Color
                                                </span>
                                            </div>
                                        </div>
                                        
                                        <!-- Quantity Controls -->
                                        <div class="col-md-2 d-flex align-items-center justify-content-center">
                                            <div class="quantity-controls">
                                                @if (item.VariantId.HasValue)
                                                {
                                                    <button class="quantity-btn" type="button" onclick="updateQuantity(@item.VariantId, @(item.Quantity - 1))">
                                                        <i class="bi bi-dash"></i>
                                                    </button>
                                                    <input type="number" class="quantity-input" value="@item.Quantity" min="1" max="@item.MaxQuantity" 
                                                           onchange="updateQuantity(@item.VariantId, this.value)" id="qty-@item.VariantId">
                                                    <button class="quantity-btn" type="button" onclick="updateQuantity(@item.VariantId, @(item.Quantity + 1))">
                                                        <i class="bi bi-plus"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary fs-6">@item.Quantity</span>
                                                }
                                            </div>
                                        </div>
                                        
                                        <!-- Total Price -->
                                        <div class="col-md-2 d-flex flex-column align-items-center justify-content-center">
                                            <div class="price-highlight">@item.TotalPrice.ToString("N0") ₫</div>
                                        </div>
                                        
                                        <!-- Actions -->
                                        <div class="col-md-2 d-flex align-items-center justify-content-center">
                                            @if (item.VariantId.HasValue)
                                            {
                                                <button type="button" class="remove-btn" onclick="removeItem(@item.VariantId)">
                                                    <i class="bi bi-trash me-1"></i>Xóa
                                                </button>
                                            }
                                            else
                                            {
                                                <a asp-action="Remove" asp-route-id="@item.ItemsId" asp-route-size="@item.Size" class="remove-btn">
                                                    <i class="bi bi-trash me-1"></i>Xóa
                                                </a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                
                <!-- Order Summary -->
                <div class="col-lg-4">
                    <div class="summary-card">
                        <h4 class="mb-4">
                            <i class="bi bi-receipt me-2"></i>Tóm tắt đơn hàng
                        </h4>
                        
                        <div class="d-flex justify-content-between mb-3">
                            <span>Số sản phẩm:</span>
                            <span class="fw-bold">@Model.Count</span>
                        </div>
                        
                        <div class="d-flex justify-content-between mb-3">
                            <span>Tạm tính:</span>
                            <span class="fw-bold">@ViewBag.Total.ToString("N0") ₫</span>
                        </div>
                        
                        <div class="d-flex justify-content-between mb-3">
                            <span>Phí vận chuyển:</span>
                            <span class="fw-bold text-success">Miễn phí</span>
                        </div>
                        
                        <hr class="my-4" style="border-color: rgba(255,255,255,0.3);">
                        
                        <div class="d-flex justify-content-between mb-4">
                            <span class="fs-5">Tổng cộng:</span>
                            <span class="total-price">@ViewBag.Total.ToString("N0") ₫</span>
                        </div>
                        
                        <div class="d-grid gap-2">
                            <form asp-action="CheckStock" asp-controller="Cart" method="post">
                                <button type="submit" class="action-btn checkout-btn w-100">
                                    <i class="bi bi-credit-card me-2"></i>Tiến hành thanh toán
                                </button>
                            </form>
                            
                            <a asp-action="Clear" class="action-btn clear-btn w-100 text-center text-decoration-none">
                                <i class="bi bi-trash me-2"></i>Xóa toàn bộ giỏ hàng
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Alert Messages -->
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mt-4" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>@TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show mt-4" role="alert">
                <i class="bi bi-check-circle me-2"></i>@TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }
    </div>
</div>

<!-- Loading Overlay -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="loading-spinner"></div>
</div>

@section Scripts {
    <script>
        function showLoading() {
            document.getElementById('loadingOverlay').classList.add('show');
        }
        
        function hideLoading() {
            document.getElementById('loadingOverlay').classList.remove('show');
        }
        
        function updateQuantity(variantId, newQuantity) {
            if (newQuantity < 1) {
                newQuantity = 1;
            }
            
            showLoading();
            
            $.post('/Cart/UpdateQuantity', {
                variantId: variantId,
                quantity: newQuantity,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(data) {
                hideLoading();
                if (data.success) {
                    // Update the input value
                    $('#qty-' + variantId).val(data.itemTotal);
                    
                    // Update cart count in header
                    if (typeof updateCartCount === 'function') {
                        updateCartCount(data.cartCount);
                    }
                    
                    // Reload page to show updated totals
                    location.reload();
                } else {
                    alert(data.message);
                }
            })
            .fail(function() {
                hideLoading();
                alert('Có lỗi xảy ra khi cập nhật số lượng');
            });
        }
        
        function removeItem(variantId) {
            if (confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                showLoading();
                
                $.post('/Cart/RemoveItem', {
                    variantId: variantId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(data) {
                    hideLoading();
                    if (data.success) {
                        // Update cart count in header
                        if (typeof updateCartCount === 'function') {
                            updateCartCount(data.cartCount);
                        }
                        
                        // Reload page to show updated cart
                        location.reload();
                    } else {
                        alert(data.message);
                    }
                })
                .fail(function() {
                    hideLoading();
                    alert('Có lỗi xảy ra khi xóa sản phẩm');
                });
            }
        }
    </script>
}