@model IEnumerable<CuaHangQuanAo.Entities.Item>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "_AdminLayout";
}

<style>
    .page-title-box {
        background: linear-gradient(135deg, #1A2980 0%, #26D0CE 100%);
        color: white;
        border-radius: 10px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .card {
        transition: all 0.3s;
        border: none;
        border-radius: 0.8rem;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1) !important;
        }

    .table th {
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.82rem;
        letter-spacing: 0.5px;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(75, 0, 130, 0.05);
    }

    .action-buttons {
        display: flex;
        justify-content: space-between;
        width: 100%;
    }

        .action-buttons .btn {
            width: 32%;
            margin: 0;
            padding: 0.4rem 0;
            display: inline-flex;
            justify-content: center;
            align-items: center;
            border-radius: 50px;
            border-radius: 50px;
            padding: 0.4rem 0.5rem;
            transition: all 0.2s;
        }

            .action-buttons .btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                margin-right: 4px;
            }

    .badge-price {
        background: linear-gradient(45deg, #1A2980, #26D0CE);
        color: white;
        border-radius: 50px;
        padding: 0.5rem 1rem;
        font-weight: 500;
    }

    .empty-state {
        padding: 3rem 2rem;
        opacity: 0.8;
    }

        .empty-state i {
            font-size: 4rem;
            opacity: 0.5;
        }

    .btn-light.add-button {
        background: #ffffff;
        border-color: #26D0CE;
        color: #1A2980;
    }

        .btn-light.add-button:hover {
            background: linear-gradient(135deg, #1A2980 0%, #26D0CE 100%);
            color: white;
            border-color: transparent;
        }

    .add-button {
        font-weight: 600;
        padding: 0.6rem 1.5rem;
        border-radius: 50px;
        box-shadow: 0 4px 10px rgba(75, 0, 130, 0.3);
    }

    .table-responsive {
        border-radius: 0.8rem;
        overflow: hidden;
    }

    .product-name {
        font-weight: 500;
        color: #495057;
    }

    .category-badge {
        background-color: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 4px;
        padding: 0.3rem 0.6rem;
        font-size: 0.875rem;
    }

    .modal-header {
        background: linear-gradient(135deg, #4B0082 0%, #9370DB 100%);
        color: white;
        border-radius: 0.8rem 0.8rem 0 0;
    }

    .modal-footer .btn-danger {
        background: linear-gradient(135deg, #FF416C 0%, #FF4B2B 100%);
        border: none;
    }

    .badge-active {
        background-color: rgba(72, 187, 120, 0.1);
        color: #48BB78;
        padding: 0.35rem 0.75rem;
        border-radius: 50px;
        font-size: 0.75rem;
        font-weight: 600;
    }
</style>

<div class="container py-4">
    <div class="page-title-box d-flex justify-content-between align-items-center">
        <div>
            <h2 class="mb-1 fw-bold">
                <i class="bi bi-box me-2"></i>Danh sách sản phẩm
            </h2>
            <p class="text-white-50 mb-0">Quản lý thông tin sản phẩm trong cửa hàng</p>
        </div>
        <a class="btn btn-light add-button" href="@Url.Action("CreateItems", "Item")">
            <i class="bi bi-plus-circle-fill me-2"></i> Thêm sản phẩm
        </a>
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm mb-3">
                <div class="card-body p-3">
                    <div class="d-flex align-items-center">
                        <div class="rounded-circle bg-primary bg-opacity-10 p-3">
                            <i class="bi bi-box text-primary fs-4"></i>
                        </div>
                        <div class="ms-3">
                            <h6 class="mb-1 text-muted">Tổng sản phẩm</h6>
                            <h4 class="mb-0 fw-bold">@(Model?.Count() ?? 0)</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm mb-3">
                <div class="card-body p-3">
                    <div class="d-flex align-items-center">
                        <div class="rounded-circle bg-success bg-opacity-10 p-3">
                            <i class="bi bi-grid text-success fs-4"></i>
                        </div>
                        <div class="ms-3">
                            <h6 class="mb-1 text-muted">Số danh mục</h6>
                            <h4 class="mb-0 fw-bold">@(Model?.Select(x => x.CategoryId).Distinct().Count() ?? 0)</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm mb-3">
                <div class="card-body p-3">
                    <div class="d-flex align-items-center">
                        <div class="rounded-circle bg-info bg-opacity-10 p-3">
                            <i class="bi bi-tag text-info fs-4"></i>
                        </div>
                        <div class="ms-3">
                            <h6 class="mb-1 text-muted">Giá trung bình</h6>
                            <h4 class="mb-0 fw-bold">
                                @string.Format("{0:N0} đ", (Model != null && Model.Any()) ? Model.Average(x => x.SellPrice) : 0)
                            </h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow">
        <div class="card-header bg-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-list-ul me-2 text-primary"></i> Danh sách sản phẩm
                </h5>
                <form method="get" asp-action="Items" asp-controller="Item" class="input-group" style="width: 250px;">
                    <input type="text" class="form-control" placeholder="Tìm kiếm..." name="search" value="@ViewBag.Search">
                    <button class="btn btn-outline-secondary" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </form>
            </div>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0" id="productTable">
                    <thead>
                        <tr class="bg-light">
                            <th scope="col" style="width:5%">#</th>
                            <th scope="col" style="width:30%">
                                <i class="bi bi-box me-1 text-secondary">Sản phẩm</i>
                            </th>
                            <th scope="col" style="width:15%">
                                <i class="bi bi-grid me-1 text-secondary">Danh mục</i>
                            </th>
                            <th scope="col" style="width:15%">
                                <i class="bi bi-tag me-1 text-secondary">Giá bán</i>
                            </th>
                            <th scope="col" style="width:15%">
                                <i class="bi bi-tag me-1 text-secondary">Trạng thái</i>
                                </th>
                            <th scope="col" class="text-center" style="width:20%">
                                <i class="bi bi-sliders me-1 text-secondary">Hành động</i>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            int stt = (ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1;
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td class="fw-bold text-secondary">@stt</td>
                                    <td>
                                        <span class="product-name">@item.ItemsName</span>
                                    </td>
                                    <td>
                                        <span class="category-badge">
                                            <i class="bi bi-grid me-1"></i>
                                            @(item.Category?.NameCategory ?? "Không xác định")
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge-price">
                                            @string.Format("{0:N0} đ", item.SellPrice)
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge-active">
											@if (item.IsAvailable)
											{
												<span>Hoạt động</span>
											}
											else
											{
												<span>Ngừng hoạt động</span>
											}
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="action-buttons">
                                            <a class="btn btn-sm btn-outline-primary" href="@Url.Action("ItemDetails", "Item", new { id = item.ItemsId })" title="Chi tiết">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </a>
                                            <a class="btn btn-sm btn-outline-warning me-1" href="@Url.Action("EditItem", "Item", new { id = item.ItemsId, returnUrl = "Items" })" title="Sửa">
                                                <i class="bi bi-pencil-square"></i> Sửa
                                            </a>
                                            <button class="btn btn-sm btn-outline-danger delete-btn"
                                                    data-item-id="@item.ItemsId"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteModal"
                                                    title="Xóa">
                                                <i class="bi bi-trash"></i> Xóa
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                stt++;
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted empty-state">
                                    <i class="bi bi-inbox-fill mb-3"></i>
                                    <h5>Không có dữ liệu sản phẩm</h5>
                                    <p class="mb-0">Vui lòng thêm sản phẩm mới</p>
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>
            </div>
        </div>
        <div class="card-footer bg-white py-3">
            <div class="d-flex justify-content-between align-items-center">
                <span class="text-muted small">Hiển thị @Model.Count() / @ViewBag.TotalItems sản phẩm</span>
                <nav aria-label="Page navigation">
                    <ul class="pagination pagination-sm mb-0">
                        @{
                            // Nút "Trước"
                            var prevDisabled = ViewBag.CurrentPage == 1 ? "disabled" : "";
                            var nextDisabled = ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "";
                        }

                        <li class="page-item @prevDisabled">
                            <a class="page-link" href="@Url.Action("Items", "Item", new { page = ViewBag.CurrentPage - 1, search = ViewBag.Search })"
                               tabindex="-1" aria-disabled="@(prevDisabled == "disabled")">Trước</a>
                        </li>
                        @{
                            int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                            int endPage = Math.Min(ViewBag.TotalPages, startPage + 4);

                            startPage = Math.Max(1, Math.Min(startPage, endPage - 4));
                            @for (int i = startPage; i <= endPage; i++)
                            {
                                var active = i == ViewBag.CurrentPage ? "active" : "";
                                <li class="page-item @active">
                                    <a class="page-link" href="@Url.Action("Items", "Item", new { page = i, search = ViewBag.Search })">@i</a>
                                </li>
                            }
                        }
                        <li class="page-item @nextDisabled">
                            <a class="page-link" href="@Url.Action("Items", "Item", new { page = ViewBag.CurrentPage + 1, search = ViewBag.Search })">Sau</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

    </div>
</div>

<!-- Modal xác nhận xóa sản phẩm -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa sản phẩm này không?</p>
                <p class="text-danger"><strong>Lưu ý:</strong> Hành động này không thể hoàn tác và sẽ xóa tất cả thông tin liên quan.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form id="deleteForm" asp-action="Functions_DeleteConfirmed" asp-controller="Item" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="itemId" name="id" value="" />
                    <button type="submit" class="btn btn-danger">Xóa sản phẩm</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Tìm kiếm sản phẩm
            $("#searchInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#productTable tbody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });

            // Xử lý xóa sản phẩm
            $('.delete-btn').click(function() {
                var itemId = $(this).data('item-id');
                $('#itemId').val(itemId);
            });
        });
    </script>
}
